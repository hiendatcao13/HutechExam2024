@using Hutech.Exam.Shared.DTO
@using System.Text
@using Hutech.Exam.Shared.DTO.Request
@inject ISnackbar Snackbar

<MudDialog Style="max-width: 500px">
	<DialogContent>

		<MudGrid>
			<MudItem xs="6">
				<MudTextField Label="MSSV" @bind-Value="MSSV" />
			</MudItem>

			<MudItem xs="3">
				<MudSelect T="long" Label="Mã đề" @bind-Value="ma_de_thi">
					@if (maDeHVs != null)
					{
						foreach (var item in maDeHVs)
						{
							<MudSelectItem Value="item">@item</MudSelectItem>
						}
					}
				</MudSelect>
			</MudItem>

			<MudItem xs="6">
				<MudText Typo="Typo.body1">Họ và lót: <strong>@sinhVien?.HoVaTenLot</strong></MudText>
			</MudItem>

			<MudItem xs="6">
				<MudText Typo="Typo.body1">Tên sinh viên: <strong>@sinhVien?.TenSinhVien</strong></MudText>
			</MudItem>

			<MudItem xs="6" Style="padding-top: 0">
				<MudText Typo="Typo.body1">Phòng thi: <strong>@lop</strong></MudText>
			</MudItem>

			<MudItem xs="6" Style="padding-top: 0">
				<MudText Typo="Typo.body1">Giới tính: <strong>@(sinhVien?.GioiTinh == 0 ? "Nam" : "Nữ")</strong></MudText>
			</MudItem>
		</MudGrid>


		<MudText Color="Color.Warning" Typo="Typo.caption">
			Lưu ý: Hãy chắc chắn rằng các mã đề hoán vị đã được tạo sẵn và sinh viên đã tồn tại trong bảng sinh viên trước khi đưa vào bảng ca thi.
		</MudText>
	</DialogContent>
	<DialogActions>
		<MudButton OnClick="OnClickThoat" Color="Color.Secondary">Thoát</MudButton>
		<MudButton OnClick="OnClickLuu" Color="Color.Success">Lưu</MudButton>
	</DialogActions>
</MudDialog>
<style>
	.my-custom-class {
	backdrop-filter: blur(10px);
	}
</style>

@code {
	[CascadingParameter] public IMudDialogInstance? MudDialog { get; set; }
	[Parameter] public List<long>? maDeHVs { get; set; }
	[Parameter] public List<string>? maMSSVs { get; set; }
	[Parameter] public int? ma_ca_thi { get; set; }
	[Parameter] public string? lop { get; set; }
	[Inject] private HttpClient Http { get; set; } = default!;

	private string? MSSV;
	private bool isMale = false;
	private SinhVienDto? sinhVien = new();
	private long ma_de_thi = -1;

	private string? tenSinhVien;
	private string? hoTenLot;

	private const string NO_SV = "Không tìm thấy sinh viên nào với mã sinh viên này. Vui lòng kiểm tra lại";
	private const string YES_SV = "Đã tìm thấy sinh viên trong dữ liệu. Vui lòng chọn lưu để thêm";
	private const string SUCCESS_ADDSV = "Thêm thí sinh thành công";
	private const string FAILED_ADDSV = "Thêm thí sinh thất bại. Thí sinh không tồn tại trong hệ thống, vui lòng liên hệ phòng đào tạo để thêm thí sinh vào!";
	private const string ALREADY_EXSIST_MSSV = "Mã thí sinh đã tồn tại trong ca thi. Vui lòng kiểm tra";
	private const string INVALID_MADETHI = "Vui lòng chọn mã đề";
	private const string INVALID_MSSV = "Vui lòng nhập mã sinh viên";

	private void OnClickThoat()
	{
		MudDialog?.Close();
	}

	private async Task OnClickLuu()
	{
		if (ma_de_thi == -1)
		{
			Snackbar.Add(INVALID_MADETHI, Severity.Error);
			return;
		}
		if (string.IsNullOrEmpty(MSSV) || MSSV == "0")
		{
			Snackbar.Add(INVALID_MSSV, Severity.Error);
			return;
		}
		if (maMSSVs != null && maMSSVs.Contains(MSSV))
		{
			Snackbar.Add(ALREADY_EXSIST_MSSV, Severity.Error);
			return;
		}

		if (maDeHVs != null && ma_ca_thi != null)
		{
			await ThemSVKhanCapAPI(new SVKhanCapRequest { MaSoSinhVien = MSSV, MaCaThi = (int)ma_ca_thi, MaDeThi = ma_de_thi });
		}
	}
	private async Task<bool> ThemSVKhanCapAPI(SVKhanCapRequest SVKhanCap)
	{
		var jsonString = System.Text.Json.JsonSerializer.Serialize(SVKhanCap);
		var response = await Http.PostAsync($"api/ChiTietCaThi/ThemSVKhanCap", new StringContent(jsonString, Encoding.UTF8, "application/json"));
		if (response.IsSuccessStatusCode)
		{
			Snackbar.Add(SUCCESS_ADDSV, MudBlazor.Severity.Success);
			var result = await response.Content.ReadFromJsonAsync<ChiTietCaThiDto>();
			MudDialog?.Close(result);
			return true;
		}
		if (response.StatusCode == System.Net.HttpStatusCode.NotFound)
		{
			Snackbar.Add(FAILED_ADDSV, Severity.Error);
			return false;
		}
		return false;
	}
	private async Task<SinhVienDto?> GetSVByMSSV(string mssv)
	{
		var response = await Http.GetAsync($"api/SinhVien/SelectBy_MSSV?ma_so_sinh_vien={mssv}");
		if (response.IsSuccessStatusCode)
		{
			return await response.Content.ReadFromJsonAsync<SinhVienDto?>();
		}
		return null;
	}
}

