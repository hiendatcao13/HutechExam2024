@page "/admin/monitor"
@using Hutech.Exam.Shared.DTO
@attribute [Authorize(Roles = "Admin")]
@inject ISnackbar Snackbar
@inject IDialogService Dialog

<PageTitle>Exam Monitor</PageTitle>

<MudContainer Class="d-flex justify-center align-center">
    <MudGrid Style="margin-top: 70px">
        <MudItem xs="2">
            <MudPaper Elevation="2" Class="pa-4">
                <MudButton StartIcon="@Icons.Material.Filled.PersonAddAlt1" Color="Color.Default" OnClick="async () => await OnClickThemSV()">Thêm SV</MudButton>
                <MudButton Class="button-side" StartIcon="@Icons.Material.Filled.Refresh" Color="Color.Default" OnClick="async() => await Refresh()">Refresh</MudButton>
                <MudButton Class="button-side" StartIcon="@Icons.Material.Filled.Print" Color="Color.Default">Check Điểm</MudButton>
                <MudButton Class="button-side" StartIcon="@Icons.Material.Filled.PictureAsPdf"  Color="Color.Default">Export PDF</MudButton>
                <MudButton Class="button-side" StartIcon="@Icons.Material.Filled.DocumentScanner" Color="Color.Default" OnClick="OnClickDownloadExcel">Export EXCEL</MudButton>
            </MudPaper>
            @* <MudPaper Elevation="2" Class="pa-4" Style="margin-top: 5%; position: sticky; top: 8%">
                <MudText Typo="Typo.subtitle2">THỜI GIAN BIỂU SV</MudText>
                <MudText Typo="Typo.caption">ĐNhap: @currentlyHover_dangNhap</MudText><br />
                <MudText Typo="Typo.caption">ĐXuat: @currentlyHover_dangXuat</MudText><br />
                <MudText Typo="Typo.caption">BĐ thi: @currentlyHover_thoiGianBD</MudText><br />
                <MudText Typo="Typo.caption">KT thi: @currentlyHover_thoiGianKT</MudText><br />
                <MudText Typo="Typo.caption">Cộng: @currentlyHover_thoiGianCong</MudText>
            </MudPaper> *@
        </MudItem>
        @if(chiTietCaThis != null)
        {
            <MudItem xs="10">
                <MudTable T="ChiTietCaThiDto" Items="@chiTietCaThis" Hover="true" Dense="true" Breakpoint="Breakpoint.Sm" FixedHeader="true" Striped="true" Filter="new Func<ChiTietCaThiDto,bool>(Filter)" SortLabel="Sort By">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Thông tin ca thi</MudText>
                        <MudSpacer />
                        <MudTextField @bind-Value="searchString" Placeholder="Nhập mã số sinh viên" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh>STT</MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ChiTietCaThiDto, object>(x=>x.MaSinhVienNavigation?.MaSoSinhVien ?? string.Empty)">MSSV</MudTableSortLabel></MudTh>
                        <MudTh>Họ và Tên</MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ChiTietCaThiDto, object>(x=>x.MaDeThi ?? -1)">Mã Đề</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ChiTietCaThiDto, object>(x=>x.DaHoanThanh)">Trạng Thái</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ChiTietCaThiDto, object>(x=>x.MaSinhVienNavigation?.IsLoggedIn ?? false)">Đăng Nhập</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ChiTietCaThiDto, object>(x=>x.GioCongThem)">Phút Cộng</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ChiTietCaThiDto, object>(x=>x.Diem)">Điểm</MudTableSortLabel></MudTh>
                        <MudTh>Chức năng</MudTh>
                    </HeaderContent>
                    <RowTemplate Context="item">
                        <MudTd>@(chiTietCaThis.IndexOf(item) + 1)</MudTd>
                        <MudTd>@item.MaSinhVienNavigation?.MaSoSinhVien</MudTd>
                        <MudTd>@item.MaSinhVienNavigation?.HoVaTenLot @item.MaSinhVienNavigation?.TenSinhVien</MudTd>
                        <MudTd>@item.MaDeThi</MudTd>
                        <MudTd Style="@($"color: {GetTrangThai(item)}")">@(item.DaHoanThanh ? "Đã thi" : item.DaThi ? "Đang thi" : "Chưa thi")</MudTd>
                        <MudTd Style="@($"color: {GetDangNhap(item)}")">@(item.MaSinhVienNavigation?.IsLoggedIn == true ? "Đã đăng nhập" : "Chưa đăng nhập")</MudTd>
                        <MudTd>@(item.GioCongThem == 0 || item.GioCongThem == -1 ? "0" : $"{item.GioCongThem} ({item.LyDoCong})")</MudTd>
                        <MudTd>@(item.Diem == -1 ? "∞" : item.Diem.ToString())</MudTd>
                        <MudTd>
                            <MudButtonGroup Style="zoom: 0.7">
                                <MudIconButton Icon="@Icons.Material.Filled.LockReset" Color="Color.Success" OnClick="() => OnClickResetLogin(item?.MaSinhVienNavigation)" />
                                <MudIconButton Icon="@Icons.Material.Filled.Timer" Color="Color.Warning" OnClick="() => OnClickCongGioThem(item)" />
                                <MudIconButton Icon="@Icons.Material.Filled.FindInPage" Color="Color.Error" />
                            </MudButtonGroup>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </MudItem>
        }
    </MudGrid>
</MudContainer>
<style>
    .button-side{
    margin-top: 5%;
    }
</style>
<script>
    function downloadFile(fileName, base64Data) {
    const link = document.createElement('a');
    link.download = fileName;
    link.href = 'data:application/octet-stream;base64,' + base64Data;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    }
</script>
@code{
    private string GetTrangThai (ChiTietCaThiDto chiTietCaThi) => chiTietCaThi.DaHoanThanh ? "green" : chiTietCaThi.DaThi ? "black" : "red";
    private string GetDangNhap (ChiTietCaThiDto chiTietCaThi) => chiTietCaThi.MaSinhVienNavigation?.IsLoggedIn == true ? "blue" : "black";

    private string searchString = "";

    private bool Filter(ChiTietCaThiDto element)
    {
        // Nếu searchString rỗng hoặc null, không cần lọc, trả về true
        if (string.IsNullOrWhiteSpace(searchString))
            return true;

        // Kiểm tra null an toàn trước khi truy cập thuộc tính con
        return element.MaSinhVienNavigation?.MaSoSinhVien?.Contains(searchString, StringComparison.OrdinalIgnoreCase) == true;
    }
}