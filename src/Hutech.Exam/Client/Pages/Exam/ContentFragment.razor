

@if (!string.IsNullOrEmpty(Content))
{
	// xử lí câu hỏi latex
	if (Content.Contains("<latex"))
	{
		List<string> latex = HandleLatex(Content);
		foreach (var segment in latex)
		{
			@if (segment.Contains("$$"))
			{
				<span style="color: @((IsParentContent) ?  "#2e7d32" : ""); font-weight: @((IsBold) ? "bold" : "normal")"><Hutech.Exam.Client.Pages.Latext.Equation Value="@segment.Substring(2)" /></span>
			}
			else
			{
				<span style="color: @((IsParentContent) ?  "#2e7d32" : ""); font-weight: @((IsBold) ? "bold" : "normal")">@((MarkupString)segment)</span>
			}
		}
	}
	else
	{
		<span style="color: @((IsParentContent) ?  "#2e7d32" : ""); font-weight: @((IsBold) ? "bold" : "normal")">@((MarkupString)(Content))</span>
	}
}


@code {
	[Parameter] public string Content { get; set; } = string.Empty;
	[Parameter] public bool IsParentContent { get; set; } = false;
	[Parameter] public bool IsBold { get; set; } = false;


	private static List<string> HandleLatex(string text)
	{
		List<string> result = new();
		if (!text.Contains("<latex>"))
			return [text];

		string[] parts = text.Split("<latex>");

		// xử lí phần đầu chắc chắn không có latex hoặc là thuần latex
		if (!string.IsNullOrEmpty(parts[0]))
			result.Add(parts[0]);

		for (int i = 1; i < parts.Length; i++)
		{
			// phần cắt này chỉ có 2 phần duy nhất
			string[] parts2 = parts[i].Split("</latex>");

			// xử lí phần đầu chắc chắn là latex
			result.Add("$$" + parts2[0]);

			// / phần còn lại là chữ hoặc không có nếu là thuần latex
			if (parts2.Length > 1 && !string.IsNullOrEmpty(parts2[1]))
				result.Add(parts2[1]);
		}

		return result;
	}
}
