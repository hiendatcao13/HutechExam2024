@page "/test"
@inject ISnackbar Snackbar
@inject IDialogService Dialog
@attribute [Authorize]

<PageTitle>Exam Page</PageTitle>


<MudPaper Elevation="4" Class="pa-4" Style="background-color: #f9f9f9;">
	<!-- Header Section -->
	<MudGrid AlignItems="Center" Justify="Justify.SpaceBetween" Class="mb-4">
		<MudItem xs="12" md="4">
			<MudImage Src="images/exam/Logo.svg" Width="150" />
		</MudItem>
		<MudItem xs="12" md="4" Class="d-flex justify-center">
			<MudText Typo="Typo.h6" Align="Align.Center" Style="color: #333;">⏰ Thời gian còn lại: <b>@displayTime</b></MudText>
		</MudItem>
		<MudItem xs="12" md="4" Class="d-flex justify-end">
			<MudButton Variant="Variant.Filled" Color="Color.Success" Size="Size.Large" OnClick="async () => await OnClickNopBai()">Nộp Bài</MudButton>
		</MudItem>
	</MudGrid>

	<MudGrid>
		<MudItem xs="12" md="9">
			<MudPaper Class="pa-4" Style="border: 1px solid #ccc;">
				@if (customDeThis != null)
				{
					int current_ma_nhom_cha = -1;
					int current_ma_nhom = 0;
					int ma_audio = 0;

					foreach (var item in customDeThis)
					{
						//Hiển thị nội dung câu hỏi nhóm cha cấp 1 - chương phần
						if (current_ma_nhom_cha != item.MaNhomCha && !string.IsNullOrEmpty(item.NoiDungCauHoiNhomCha))
						{
							current_ma_nhom_cha = item.MaNhomCha;
							<MudText Typo="Typo.h6" GutterBottom="true" Style="text-transform: uppercase" Class="nhomCauHoiCha">
								<NoiDungFragment NoiDung="@item.NoiDungCauHoiNhomCha.ToUpper()" isNoiDungCha="true" />
							</MudText>
						}

						//Hiển thị nội dung câu hỏi nhóm con cấp 2
						if (current_ma_nhom != item.MaNhom && !string.IsNullOrEmpty(item.NoiDungCauHoiNhom))
						{
							current_ma_nhom = item.MaNhom;

							// xử lí câu hỏi âm thanh
							if (item.KieuNoiDungCauHoiNhom == 2 && item.NoiDungCauHoiNhom.Contains("<audio") && isDisableAudio != null && item.GhiChu != null)
							{
								string audio_source = HandleAudioSource(item.NoiDungCauHoiNhom);
								string text_before = HandleBeforeAudio(item, item.NoiDungCauHoiNhom, ma_audio);
								string id = $"audio{ma_audio}";
								<p>@((MarkupString)(text_before))</p>
								<span>
									<audio id=@id controls controlsList="nodownload" @onplay="async () => await OnPlayAudio(item, ma_audio, audio_source, id)">
										<source src="@audio_source" />
									</audio>
									@((MarkupString)(item.GhiChu))
								</span>
								ma_audio++;
							}
							else
							{
								<MudText Typo="Typo.subtitle1" GutterBottom="true">
									<b><NoiDungFragment NoiDung="@item.NoiDungCauHoiNhom" /></b>
								</MudText>
							}
						}

						//Hiển thị nội dung câu hỏi
						if (!string.IsNullOrEmpty(item.NoiDungCauHoi))
						{
							<MudText Typo="Typo.body1" GutterBottom="true">
								<b>Câu hỏi @(item.ThuTuCauHoi): <NoiDungFragment NoiDung="@item.NoiDungCauHoi" /></b>
							</MudText>
						}

						// Hiển thị nội dung câu trả lời
						@if (item.CauTraLois != null)
						{
							int stt = 0;
							// xử lí câu trả lời nhiều đáp án
							if (item.KieuNoiDungCauHoi == 1)
							{
								<MudGrid>
									@foreach (var noidung in item.CauTraLois)
									{
										<MudItem xs="12" sm="6" Style="padding-top: 15px">
											<MudCheckBox Value=false>@alphabet[stt++]. <NoiDungFragment NoiDung="@noidung.Value"></NoiDungFragment></MudCheckBox>
										</MudItem>
									}
								</MudGrid>
							}

							// xử lí câu trả lời ngắn
							else if (item.KieuNoiDungCauHoi == 2)
							{
								<MudItem xs="10" sm="7">
									<MudTextField Value=@("hello") Label="Điền vào chỗ trống" Variant="Variant.Outlined" />
								</MudItem>
							}

							// xử lí câu trả lời truyền thống
							else
							{
								<MudRadioGroup T="string" Class="mt-2" Style="padding-bottom: 10px">
									@foreach (var noidung in item.CauTraLois)
									{
										<MudItem xs="12" sm="6">
											<MudRadio Value=@("option1")>@alphabet[stt++]. <NoiDungFragment NoiDung="@noidung.Value"></NoiDungFragment></MudRadio>
										</MudItem>
									}
								</MudRadioGroup>

							}
						}
					}
				}
			</MudPaper>
		</MudItem>

		<!-- Sidebar Info -->
		<MudItem xs="12" md="3">
			<MudPaper Class="pa-4" Style="text-align: center; border: 1px solid #ccc; margin-bottom: 15%;">
				<MudImage Src="images/exam/Ellipse 1.svg" Width="120" Class="mb-2" />
				<MudDivider Class="mb-2" />
				<MudText Typo="Typo.subtitle2"><b>Tên:</b> @sinhVien?.HoVaTenLot @sinhVien?.TenSinhVien</MudText>
				<MudText Typo="Typo.subtitle2"><b>Mã SV:</b> @sinhVien?.MaSoSinhVien</MudText>
				<MudText Typo="Typo.subtitle2"><b>Môn thi:</b> @caThi?.MaChiTietDotThiNavigation?.MaLopAoNavigation.MaMonHocNavigation?.TenMonHoc</MudText>
				<MudText Typo="Typo.subtitle2"><b>Mã đề:</b> @chiTietCaThi?.MaDeThi?.ToString("D3")</MudText>
			</MudPaper>
			<MudPaper Class="pa-4" Style="text-align: center; border: 1px solid #ccc; position: sticky; top: 5%">
				<MudText Typo="Typo.subtitle2" Class="mb-2"><b>Danh sách câu hỏi</b></MudText>
				<MudGrid>
					@{
						int totalQuestions = customDeThis?.Count ?? 0;
						for (int i = 0; i < totalQuestions; i++)
						{
							int stt = i + 1;
							<MudItem xs="3" md="3" Style="transform: scale(0.85)">
								<MudButton Size="Size.Small" Variant="Variant.Outlined" Color="Color.Default">
									@(stt)
								</MudButton>
							</MudItem>
						}
					}
				</MudGrid>
			</MudPaper>
		</MudItem>
	</MudGrid>
</MudPaper>

<script src="js/exam.js" type="text/javascript"></script>

<style>
	.nhomCauHoiCha {
		border: 1px solid;
		background-color: antiquewhite;
		border-radius: 5px;
		padding: 5px;
	}
</style>

<script>
		window.focusWatcher = {
		init: function (dotNetHelper) {
			document.addEventListener('visibilitychange', function () {
				if (document.hidden) {
					// Khi người dùng rời khỏi tab
					dotNetHelper.invokeMethodAsync('OnFocusLost');
				}
			});

			window.addEventListener('blur', function () {
				// Khi mất focus khỏi cửa sổ
				dotNetHelper.invokeMethodAsync('OnFocusLost');
			});
		}
	};
</script>

